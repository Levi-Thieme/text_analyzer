package combiners;

import java.util.concurrent.Callable;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.dizitart.no2.Document;


public class CombineWordCountNitrite implements Callable<Document>{
	private byte[] bytes;
	private String regex;
	
	public CombineWordCountNitrite(byte[] bytes, String regex) {
		this.bytes = bytes;
		this.regex = regex;
	}
	
	@Override
	public Document call() {
		Document wordCounts = new Document();
		String text = new String(bytes);
		Pattern pattern = Pattern.compile(regex);
		Matcher matcher = pattern.matcher(text);
		final long one = 1;
		while (matcher.find()) {
			String token = matcher.group(0);
			Object value = wordCounts.get(token);
			if(value == null) {
				wordCounts.put(token, one);
			}
			else {
				long total = Long.parseLong(value.toString()) + one;
				wordCounts.put(token, total);
			}
		}
		return wordCounts;
	}
}
